2025-10-04 10:30:39.777649+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: 列 "BODY CHARACTER VARYING(255)" の値が長過ぎます: "U&'\\3053\\3053\\306b\\81ea\\5df1\\7d39\\4ecb\\3084\\4e00\\8a00\\30b3\\30e1\\30f3\\30c8\\3092\\8... (357)"
Value too long for column "BODY CHARACTER VARYING(255)": "U&'\\3053\\3053\\306b\\81ea\\5df1\\7d39\\4ecb\\3084\\4e00\\8a00\\30b3\\30e1\\30f3\\30c8\\3092\\8... (357)"; SQL statement:
insert into comment (author,body,created_at,id) values (?,?,?,default) [22001-232]
2025-10-04 10:30:51.630373+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: 列 "BODY CHARACTER VARYING(255)" の値が長過ぎます: "U&'\\3053\\3053\\306b\\81ea\\5df1\\7d39\\4ecb\\3084\\4e00\\8a00\\30b3\\30e1\\30f3\\30c8\\3092\\8... (756)"
Value too long for column "BODY CHARACTER VARYING(255)": "U&'\\3053\\3053\\306b\\81ea\\5df1\\7d39\\4ecb\\3084\\4e00\\8a00\\30b3\\30e1\\30f3\\30c8\\3092\\8... (756)"; SQL statement:
insert into comment (author,body,created_at,id) values (?,?,?,default) [22001-232]
2025-10-04 11:48:12.874557+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: 列 "BODY CHARACTER VARYING(255)" の値が長過ぎます: "U&'\\6295\\7a3f\\30d5\\30a9\\30fc\\30e0\\306b\\30c6\\30ad\\30b9\\30c8\\3092\\5165\\308c\\3066\\9... (279)"
Value too long for column "BODY CHARACTER VARYING(255)": "U&'\\6295\\7a3f\\30d5\\30a9\\30fc\\30e0\\306b\\30c6\\30ad\\30b9\\30c8\\3092\\5165\\308c\\3066\\9... (279)"; SQL statement:
insert into comment (author,body,created_at,id) values (?,?,?,default) [22001-232]
2025-10-04 11:48:47.510708+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: 列 "BODY CHARACTER VARYING(255)" の値が長過ぎます: "U&'\\6295\\7a3f\\30d5\\30a9\\30fc\\30e0\\306b\\30c6\\30ad\\30b9\\30c8\\3092\\5165\\308c\\3066\\9... (341)"
Value too long for column "BODY CHARACTER VARYING(255)": "U&'\\6295\\7a3f\\30d5\\30a9\\30fc\\30e0\\306b\\30c6\\30ad\\30b9\\30c8\\3092\\5165\\308c\\3066\\9... (341)"; SQL statement:
insert into comment (author,body,created_at,id) values (?,?,?,default) [22001-232]
2025-10-04 11:59:49.310121+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: 列 "BODY CHARACTER VARYING(255)" の値が長過ぎます: "U&'\\6295\\7a3f\\30d5\\30a9\\30fc\\30e0\\306b\\30c6\\30ad\\30b9\\30c8\\3092\\5165\\308c\\3066\\9... (300)"
Value too long for column "BODY CHARACTER VARYING(255)": "U&'\\6295\\7a3f\\30d5\\30a9\\30fc\\30e0\\306b\\30c6\\30ad\\30b9\\30c8\\3092\\5165\\308c\\3066\\9... (300)"; SQL statement:
insert into comment (author,body,created_at,id) values (?,?,?,default) [22001-232]
2025-10-04 12:16:36.790688+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: 列 "AUTHOR CHARACTER VARYING(100)" の値が長過ぎます: "'dgkdgedfgkjzpdgks]d.gf:;pdfskghpojzxdolgjszrljdgojsodgjs@pdgkdgedfgkjzpdgks]d.g... (14946)"
Value too long for column "AUTHOR CHARACTER VARYING(100)": "'dgkdgedfgkjzpdgks]d.gf:;pdfskghpojzxdolgjszrljdgojsodgjs@pdgkdgedfgkjzpdgks]d.g... (14946)"; SQL statement:
insert into comment (author,body,created_at,id) values (?,?,?,default) [22001-232]
2025-10-04 12:16:40.643429+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: 列 "AUTHOR CHARACTER VARYING(100)" の値が長過ぎます: "'dgkdgedfgkjzpdgks]d.gf:;pdfskghpojzxdolgjszrljdgojsodgjs@pdgkdgedfgkjzpdgks]d.g... (318)"
Value too long for column "AUTHOR CHARACTER VARYING(100)": "'dgkdgedfgkjzpdgks]d.gf:;pdfskghpojzxdolgjszrljdgojsodgjs@pdgkdgedfgkjzpdgks]d.g... (318)"; SQL statement:
insert into comment (author,body,created_at,id) values (?,?,?,default) [22001-232]
2025-10-04 12:16:44.329150+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: 列 "AUTHOR CHARACTER VARYING(100)" の値が長過ぎます: "'dgkdgedfgkjzpdgks]d.gf:;pdfskghpojzxdolgjszrljdgojsodgjs@pdgkdgedfgkjzpdgks]d.g... (318)"
Value too long for column "AUTHOR CHARACTER VARYING(100)": "'dgkdgedfgkjzpdgks]d.gf:;pdfskghpojzxdolgjszrljdgojsodgjs@pdgkdgedfgkjzpdgks]d.g... (318)"; SQL statement:
insert into comment (author,body,created_at,id) values (?,?,?,default) [22001-232]
2025-10-04 12:16:48.865467+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: 列 "AUTHOR CHARACTER VARYING(100)" の値が長過ぎます: "'dgkdgedfgkjzpdgks]d.gf:;pdfskghpojzxdolgjszrljdgojsodgjs@pdgkdgedfgkjzpdgks]d.g... (318)"
Value too long for column "AUTHOR CHARACTER VARYING(100)": "'dgkdgedfgkjzpdgks]d.gf:;pdfskghpojzxdolgjszrljdgojsodgjs@pdgkdgedfgkjzpdgks]d.g... (318)"; SQL statement:
insert into comment (author,body,created_at,id) values (?,?,?,default) [22001-232]
2025-10-04 12:17:04.914957+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: 列 "AUTHOR CHARACTER VARYING(100)" の値が長過ぎます: "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (741)"
Value too long for column "AUTHOR CHARACTER VARYING(100)": "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (741)"; SQL statement:
insert into comment (author,body,created_at,id) values (?,?,?,default) [22001-232]
2025-10-04 12:17:18.796727+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: 列 "AUTHOR CHARACTER VARYING(100)" の値が長過ぎます: "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (114)"
Value too long for column "AUTHOR CHARACTER VARYING(100)": "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (114)"; SQL statement:
insert into comment (author,body,created_at,id) values (?,?,?,default) [22001-232]
2025-10-04 12:48:03.836671+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: 列 "AUTHOR CHARACTER VARYING(100)" の値が長過ぎます: "'dgkdgedfgkjzpdgks]d.gf:;pdfskghpojzxdolgjszrljdgojsodgjs@pdgkdgedfgkjzpdgks]d.g... (318)"
Value too long for column "AUTHOR CHARACTER VARYING(100)": "'dgkdgedfgkjzpdgks]d.gf:;pdfskghpojzxdolgjszrljdgojsodgjs@pdgkdgedfgkjzpdgks]d.g... (318)"; SQL statement:
insert into comment (author,body,created_at,id) values (?,?,?,default) [22001-232]
2025-10-05 10:07:29.847032+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: 列 "AUTHOR CHARACTER VARYING(30)" の値が長過ぎます: "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"
Value too long for column "AUTHOR CHARACTER VARYING(30)": "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"; SQL statement:
INSERT INTO "PUBLIC"."COMMENT_COPY_3_0"("ID", "AUTHOR", "BODY", "CREATED_AT") OVERRIDING SYSTEM VALUE SELECT "ID", "AUTHOR", "BODY", "CREATED_AT" FROM "PUBLIC"."COMMENT" [22001-232]
2025-10-05 10:17:18.311984+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: 列 "AUTHOR CHARACTER VARYING(30)" の値が長過ぎます: "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"
Value too long for column "AUTHOR CHARACTER VARYING(30)": "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"; SQL statement:
INSERT INTO "PUBLIC"."COMMENT_COPY_3_0"("ID", "AUTHOR", "BODY", "CREATED_AT") OVERRIDING SYSTEM VALUE SELECT "ID", "AUTHOR", "BODY", "CREATED_AT" FROM "PUBLIC"."COMMENT" [22001-232]
2025-10-05 13:22:50.856112+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: 列 "AUTHOR CHARACTER VARYING(30)" の値が長過ぎます: "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"
Value too long for column "AUTHOR CHARACTER VARYING(30)": "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"; SQL statement:
INSERT INTO "PUBLIC"."COMMENT_COPY_3_0"("ID", "AUTHOR", "BODY", "CREATED_AT") OVERRIDING SYSTEM VALUE SELECT "ID", "AUTHOR", "BODY", "CREATED_AT" FROM "PUBLIC"."COMMENT" [22001-232]
2025-10-05 17:08:07.415801+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: 列 "AUTHOR CHARACTER VARYING(30)" の値が長過ぎます: "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"
Value too long for column "AUTHOR CHARACTER VARYING(30)": "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"; SQL statement:
INSERT INTO "PUBLIC"."COMMENT_COPY_3_0"("ID", "AUTHOR", "BODY", "CREATED_AT") OVERRIDING SYSTEM VALUE SELECT "ID", "AUTHOR", "BODY", "CREATED_AT" FROM "PUBLIC"."COMMENT" [22001-232]
2025-10-05 17:17:08.250464+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: 列 "AUTHOR CHARACTER VARYING(30)" の値が長過ぎます: "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"
Value too long for column "AUTHOR CHARACTER VARYING(30)": "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"; SQL statement:
INSERT INTO "PUBLIC"."COMMENT_COPY_3_0"("ID", "AUTHOR", "BODY", "CREATED_AT") OVERRIDING SYSTEM VALUE SELECT "ID", "AUTHOR", "BODY", "CREATED_AT" FROM "PUBLIC"."COMMENT" [22001-232]
2025-10-05 17:37:41.409468+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: 列 "AUTHOR CHARACTER VARYING(30)" の値が長過ぎます: "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"
Value too long for column "AUTHOR CHARACTER VARYING(30)": "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"; SQL statement:
INSERT INTO "PUBLIC"."COMMENT_COPY_3_0"("ID", "AUTHOR", "BODY", "CREATED_AT") OVERRIDING SYSTEM VALUE SELECT "ID", "AUTHOR", "BODY", "CREATED_AT" FROM "PUBLIC"."COMMENT" [22001-232]
2025-10-05 17:38:37.234974+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: 列 "AUTHOR CHARACTER VARYING(30)" の値が長過ぎます: "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"
Value too long for column "AUTHOR CHARACTER VARYING(30)": "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"; SQL statement:
INSERT INTO "PUBLIC"."COMMENT_COPY_3_0"("ID", "AUTHOR", "BODY", "CREATED_AT") OVERRIDING SYSTEM VALUE SELECT "ID", "AUTHOR", "BODY", "CREATED_AT" FROM "PUBLIC"."COMMENT" [22001-232]
2025-10-05 18:21:35.571791+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: 列 "AUTHOR CHARACTER VARYING(30)" の値が長過ぎます: "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"
Value too long for column "AUTHOR CHARACTER VARYING(30)": "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"; SQL statement:
INSERT INTO "PUBLIC"."COMMENT_COPY_3_0"("ID", "AUTHOR", "BODY", "CREATED_AT") OVERRIDING SYSTEM VALUE SELECT "ID", "AUTHOR", "BODY", "CREATED_AT" FROM "PUBLIC"."COMMENT" [22001-232]
2025-10-05 19:32:06.522392+09:00 database: flush
org.h2.message.DbException: 一般エラー: "org.h2.mvstore.MVStoreException: The file is locked: C:/Users/user/my-portfolio/mytwitter-vscode/data/mytwitter-db.mv.db [2.3.232/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: C:/Users/user/my-portfolio/mytwitter-vscode/data/mytwitter-db.mv.db [2.3.232/7]" [50000-232]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:407)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:122)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:1546)
	at org.h2.mvstore.MVStore.panic(MVStore.java:371)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:291)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2035)
	at org.h2.mvstore.db.Store.<init>(Store.java:133)
	at org.h2.engine.Database.<init>(Database.java:326)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:344)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:124)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:144)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:370)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:207)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:488)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:97)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:485)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:334)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1442)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1513)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.example.mytwitter_vscode.MytwitterVscodeApplication.main(MytwitterVscodeApplication.java:10)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: 一般エラー: "org.h2.mvstore.MVStoreException: The file is locked: C:/Users/user/my-portfolio/mytwitter-vscode/data/mytwitter-db.mv.db [2.3.232/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: C:/Users/user/my-portfolio/mytwitter-vscode/data/mytwitter-db.mv.db [2.3.232/7]" [50000-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:566)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	... 60 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: C:/Users/user/my-portfolio/mytwitter-vscode/data/mytwitter-db.mv.db [2.3.232/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:996)
	at org.h2.mvstore.SingleFileStore.lockFileChannel(SingleFileStore.java:143)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:117)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:81)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:286)
	... 54 more
2025-10-05 19:42:52.824991+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: 列 "AUTHOR CHARACTER VARYING(30)" の値が長過ぎます: "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"
Value too long for column "AUTHOR CHARACTER VARYING(30)": "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"; SQL statement:
INSERT INTO "PUBLIC"."COMMENT_COPY_3_0"("ID", "AUTHOR", "BODY", "CREATED_AT") OVERRIDING SYSTEM VALUE SELECT "ID", "AUTHOR", "BODY", "CREATED_AT" FROM "PUBLIC"."COMMENT" [22001-232]
2025-10-05 19:44:02.367158+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: 列 "AUTHOR CHARACTER VARYING(30)" の値が長過ぎます: "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"
Value too long for column "AUTHOR CHARACTER VARYING(30)": "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"; SQL statement:
INSERT INTO "PUBLIC"."COMMENT_COPY_3_0"("ID", "AUTHOR", "BODY", "CREATED_AT") OVERRIDING SYSTEM VALUE SELECT "ID", "AUTHOR", "BODY", "CREATED_AT" FROM "PUBLIC"."COMMENT" [22001-232]
2025-10-05 19:47:32.112977+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: 列 "AUTHOR CHARACTER VARYING(30)" の値が長過ぎます: "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"
Value too long for column "AUTHOR CHARACTER VARYING(30)": "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"; SQL statement:
INSERT INTO "PUBLIC"."COMMENT_COPY_3_0"("ID", "AUTHOR", "BODY", "CREATED_AT") OVERRIDING SYSTEM VALUE SELECT "ID", "AUTHOR", "BODY", "CREATED_AT" FROM "PUBLIC"."COMMENT" [22001-232]
2025-10-06 00:13:40.957451+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: 列 "AUTHOR CHARACTER VARYING(30)" の値が長過ぎます: "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"
Value too long for column "AUTHOR CHARACTER VARYING(30)": "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"; SQL statement:
INSERT INTO "PUBLIC"."COMMENT_COPY_3_0"("ID", "AUTHOR", "BODY", "CREATED_AT") OVERRIDING SYSTEM VALUE SELECT "ID", "AUTHOR", "BODY", "CREATED_AT" FROM "PUBLIC"."COMMENT" [22001-232]
2025-10-06 00:34:50.697181+09:00 database: flush
org.h2.message.DbException: 一般エラー: "org.h2.mvstore.MVStoreException: The file is locked: C:/Users/user/my-portfolio/mytwitter-vscode/data/mytwitter-db.mv.db [2.3.232/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: C:/Users/user/my-portfolio/mytwitter-vscode/data/mytwitter-db.mv.db [2.3.232/7]" [50000-232]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:407)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:122)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:1546)
	at org.h2.mvstore.MVStore.panic(MVStore.java:371)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:291)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2035)
	at org.h2.mvstore.db.Store.<init>(Store.java:133)
	at org.h2.engine.Database.<init>(Database.java:326)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:344)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:124)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:144)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:370)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:207)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:488)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:97)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:485)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:334)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1442)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1513)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.example.mytwitter_vscode.MytwitterVscodeApplication.main(MytwitterVscodeApplication.java:10)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: 一般エラー: "org.h2.mvstore.MVStoreException: The file is locked: C:/Users/user/my-portfolio/mytwitter-vscode/data/mytwitter-db.mv.db [2.3.232/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: C:/Users/user/my-portfolio/mytwitter-vscode/data/mytwitter-db.mv.db [2.3.232/7]" [50000-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:566)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	... 60 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: C:/Users/user/my-portfolio/mytwitter-vscode/data/mytwitter-db.mv.db [2.3.232/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:996)
	at org.h2.mvstore.SingleFileStore.lockFileChannel(SingleFileStore.java:143)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:117)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:81)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:286)
	... 54 more
2025-10-06 11:00:44.915003+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: 列 "AUTHOR CHARACTER VARYING(30)" の値が長過ぎます: "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"
Value too long for column "AUTHOR CHARACTER VARYING(30)": "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"; SQL statement:
INSERT INTO "PUBLIC"."COMMENT_COPY_3_0"("ID", "AUTHOR", "BODY", "CREATED_AT") OVERRIDING SYSTEM VALUE SELECT "ID", "AUTHOR", "BODY", "CREATED_AT" FROM "PUBLIC"."COMMENT" [22001-232]
2025-10-06 11:06:51.426020+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: 列 "AUTHOR CHARACTER VARYING(30)" の値が長過ぎます: "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"
Value too long for column "AUTHOR CHARACTER VARYING(30)": "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"; SQL statement:
INSERT INTO "PUBLIC"."COMMENT_COPY_3_0"("ID", "AUTHOR", "BODY", "CREATED_AT") OVERRIDING SYSTEM VALUE SELECT "ID", "AUTHOR", "BODY", "CREATED_AT" FROM "PUBLIC"."COMMENT" [22001-232]
2025-10-06 11:10:21.078246+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: 列 "AUTHOR CHARACTER VARYING(30)" の値が長過ぎます: "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"
Value too long for column "AUTHOR CHARACTER VARYING(30)": "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"; SQL statement:
INSERT INTO "PUBLIC"."COMMENT_COPY_3_0"("ID", "AUTHOR", "BODY", "CREATED_AT") OVERRIDING SYSTEM VALUE SELECT "ID", "AUTHOR", "BODY", "CREATED_AT" FROM "PUBLIC"."COMMENT" [22001-232]
2025-10-06 11:18:45.342171+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: 列 "AUTHOR CHARACTER VARYING(30)" の値が長過ぎます: "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"
Value too long for column "AUTHOR CHARACTER VARYING(30)": "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"; SQL statement:
INSERT INTO "PUBLIC"."COMMENT_COPY_3_0"("ID", "AUTHOR", "BODY", "CREATED_AT") OVERRIDING SYSTEM VALUE SELECT "ID", "AUTHOR", "BODY", "CREATED_AT" FROM "PUBLIC"."COMMENT" [22001-232]
2025-10-06 11:34:51.466030+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: 列 "AUTHOR CHARACTER VARYING(30)" の値が長過ぎます: "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"
Value too long for column "AUTHOR CHARACTER VARYING(30)": "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"; SQL statement:
INSERT INTO "PUBLIC"."COMMENT_COPY_3_0"("ID", "AUTHOR", "BODY", "CREATED_AT") OVERRIDING SYSTEM VALUE SELECT "ID", "AUTHOR", "BODY", "CREATED_AT" FROM "PUBLIC"."COMMENT" [22001-232]
2025-10-06 13:10:23.327217+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: 列 "AUTHOR CHARACTER VARYING(30)" の値が長過ぎます: "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"
Value too long for column "AUTHOR CHARACTER VARYING(30)": "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"; SQL statement:
INSERT INTO "PUBLIC"."COMMENT_COPY_3_0"("ID", "AUTHOR", "BODY", "CREATED_AT") OVERRIDING SYSTEM VALUE SELECT "ID", "AUTHOR", "BODY", "CREATED_AT" FROM "PUBLIC"."COMMENT" [22001-232]
2025-10-06 13:21:37.483466+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: 列 "AUTHOR CHARACTER VARYING(30)" の値が長過ぎます: "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"
Value too long for column "AUTHOR CHARACTER VARYING(30)": "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"; SQL statement:
INSERT INTO "PUBLIC"."COMMENT_COPY_3_0"("ID", "AUTHOR", "BODY", "CREATED_AT") OVERRIDING SYSTEM VALUE SELECT "ID", "AUTHOR", "BODY", "CREATED_AT" FROM "PUBLIC"."COMMENT" [22001-232]
2025-10-06 13:28:19.524171+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: 列 "AUTHOR CHARACTER VARYING(30)" の値が長過ぎます: "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"
Value too long for column "AUTHOR CHARACTER VARYING(30)": "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"; SQL statement:
INSERT INTO "PUBLIC"."COMMENT_COPY_3_0"("ID", "AUTHOR", "BODY", "CREATED_AT") OVERRIDING SYSTEM VALUE SELECT "ID", "AUTHOR", "BODY", "CREATED_AT" FROM "PUBLIC"."COMMENT" [22001-232]
2025-10-06 13:31:55.184358+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: 列 "AUTHOR CHARACTER VARYING(30)" の値が長過ぎます: "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"
Value too long for column "AUTHOR CHARACTER VARYING(30)": "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"; SQL statement:
INSERT INTO "PUBLIC"."COMMENT_COPY_3_0"("ID", "AUTHOR", "BODY", "CREATED_AT") OVERRIDING SYSTEM VALUE SELECT "ID", "AUTHOR", "BODY", "CREATED_AT" FROM "PUBLIC"."COMMENT" [22001-232]
2025-10-06 19:08:28.513468+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: 列 "AUTHOR CHARACTER VARYING(30)" の値が長過ぎます: "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"
Value too long for column "AUTHOR CHARACTER VARYING(30)": "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"; SQL statement:
INSERT INTO "PUBLIC"."COMMENT_COPY_3_0"("ID", "AUTHOR", "BODY", "CREATED_AT") OVERRIDING SYSTEM VALUE SELECT "ID", "AUTHOR", "BODY", "CREATED_AT" FROM "PUBLIC"."COMMENT" [22001-232]
2025-10-06 19:15:48.109426+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: 列 "AUTHOR CHARACTER VARYING(30)" の値が長過ぎます: "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"
Value too long for column "AUTHOR CHARACTER VARYING(30)": "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"; SQL statement:
INSERT INTO "PUBLIC"."COMMENT_COPY_3_0"("ID", "AUTHOR", "BODY", "CREATED_AT") OVERRIDING SYSTEM VALUE SELECT "ID", "AUTHOR", "BODY", "CREATED_AT" FROM "PUBLIC"."COMMENT" [22001-232]
2025-10-06 19:25:50.934199+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: 列 "AUTHOR CHARACTER VARYING(30)" の値が長過ぎます: "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"
Value too long for column "AUTHOR CHARACTER VARYING(30)": "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"; SQL statement:
INSERT INTO "PUBLIC"."COMMENT_COPY_3_0"("ID", "AUTHOR", "BODY", "CREATED_AT") OVERRIDING SYSTEM VALUE SELECT "ID", "AUTHOR", "BODY", "CREATED_AT" FROM "PUBLIC"."COMMENT" [22001-232]
2025-10-06 20:58:37.779960+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: 列 "AUTHOR CHARACTER VARYING(30)" の値が長過ぎます: "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"
Value too long for column "AUTHOR CHARACTER VARYING(30)": "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"; SQL statement:
INSERT INTO "PUBLIC"."COMMENT_COPY_3_0"("ID", "AUTHOR", "BODY", "CREATED_AT") OVERRIDING SYSTEM VALUE SELECT "ID", "AUTHOR", "BODY", "CREATED_AT" FROM "PUBLIC"."COMMENT" [22001-232]
2025-10-06 23:04:24.198110+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: 列 "AUTHOR CHARACTER VARYING(30)" の値が長過ぎます: "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"
Value too long for column "AUTHOR CHARACTER VARYING(30)": "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"; SQL statement:
INSERT INTO "PUBLIC"."COMMENT_COPY_3_0"("ID", "AUTHOR", "BODY", "CREATED_AT") OVERRIDING SYSTEM VALUE SELECT "ID", "AUTHOR", "BODY", "CREATED_AT" FROM "PUBLIC"."COMMENT" [22001-232]
2025-10-07 19:46:59.076329+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: 列 "AUTHOR CHARACTER VARYING(30)" の値が長過ぎます: "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"
Value too long for column "AUTHOR CHARACTER VARYING(30)": "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"; SQL statement:
INSERT INTO "PUBLIC"."COMMENT_COPY_3_0"("ID", "AUTHOR", "BODY", "CREATED_AT") OVERRIDING SYSTEM VALUE SELECT "ID", "AUTHOR", "BODY", "CREATED_AT" FROM "PUBLIC"."COMMENT" [22001-232]
2025-10-07 20:51:34.585537+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: 列 "AUTHOR CHARACTER VARYING(30)" の値が長過ぎます: "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"
Value too long for column "AUTHOR CHARACTER VARYING(30)": "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"; SQL statement:
INSERT INTO "PUBLIC"."COMMENT_COPY_3_0"("ID", "AUTHOR", "BODY", "CREATED_AT") OVERRIDING SYSTEM VALUE SELECT "ID", "AUTHOR", "BODY", "CREATED_AT" FROM "PUBLIC"."COMMENT" [22001-232]
2025-10-07 21:04:37.529740+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: 列 "AUTHOR CHARACTER VARYING(30)" の値が長過ぎます: "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"
Value too long for column "AUTHOR CHARACTER VARYING(30)": "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"; SQL statement:
INSERT INTO "PUBLIC"."COMMENT_COPY_3_0"("ID", "AUTHOR", "BODY", "CREATED_AT") OVERRIDING SYSTEM VALUE SELECT "ID", "AUTHOR", "BODY", "CREATED_AT" FROM "PUBLIC"."COMMENT" [22001-232]
2025-10-07 21:11:35.522802+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: 列 "AUTHOR CHARACTER VARYING(30)" の値が長過ぎます: "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"
Value too long for column "AUTHOR CHARACTER VARYING(30)": "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"; SQL statement:
INSERT INTO "PUBLIC"."COMMENT_COPY_3_0"("ID", "AUTHOR", "BODY", "CREATED_AT") OVERRIDING SYSTEM VALUE SELECT "ID", "AUTHOR", "BODY", "CREATED_AT" FROM "PUBLIC"."COMMENT" [22001-232]
2025-10-07 21:20:28.994209+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: 列 "AUTHOR CHARACTER VARYING(30)" の値が長過ぎます: "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"
Value too long for column "AUTHOR CHARACTER VARYING(30)": "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"; SQL statement:
INSERT INTO "PUBLIC"."COMMENT_COPY_3_0"("ID", "AUTHOR", "BODY", "CREATED_AT") OVERRIDING SYSTEM VALUE SELECT "ID", "AUTHOR", "BODY", "CREATED_AT" FROM "PUBLIC"."COMMENT" [22001-232]
2025-10-08 01:10:52.174744+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: 列 "AUTHOR CHARACTER VARYING(30)" の値が長過ぎます: "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"
Value too long for column "AUTHOR CHARACTER VARYING(30)": "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"; SQL statement:
INSERT INTO "PUBLIC"."COMMENT_COPY_3_0"("ID", "AUTHOR", "BODY", "CREATED_AT") OVERRIDING SYSTEM VALUE SELECT "ID", "AUTHOR", "BODY", "CREATED_AT" FROM "PUBLIC"."COMMENT" [22001-232]
2025-10-09 12:03:49.973831+09:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: 列 "AUTHOR CHARACTER VARYING(30)" の値が長過ぎます: "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"
Value too long for column "AUTHOR CHARACTER VARYING(30)": "U&'\\3064\\306a\\304c\\308b\\3001\\4f1d\\3048\\308b\\3001\\30b7\\30f3\\30d7\\30eb\\306a\\30df\\3... (57)"; SQL statement:
INSERT INTO "PUBLIC"."COMMENT_COPY_3_0"("ID", "AUTHOR", "BODY", "CREATED_AT") OVERRIDING SYSTEM VALUE SELECT "ID", "AUTHOR", "BODY", "CREATED_AT" FROM "PUBLIC"."COMMENT" [22001-232]
2025-10-10 14:09:05.705040+09:00 database: flush
org.h2.message.DbException: 一般エラー: "org.h2.mvstore.MVStoreException: The file is locked: C:/Users/user/my-portfolio/mytwitter-vscode/data/mytwitter-db.mv.db [2.3.232/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: C:/Users/user/my-portfolio/mytwitter-vscode/data/mytwitter-db.mv.db [2.3.232/7]" [50000-232]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:407)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:122)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:1546)
	at org.h2.mvstore.MVStore.panic(MVStore.java:371)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:291)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2035)
	at org.h2.mvstore.db.Store.<init>(Store.java:133)
	at org.h2.engine.Database.<init>(Database.java:326)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:344)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:124)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:144)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:370)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:207)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:488)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:97)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:485)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:334)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1442)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1513)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.example.mytwitter_vscode.MytwitterVscodeApplication.main(MytwitterVscodeApplication.java:10)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: 一般エラー: "org.h2.mvstore.MVStoreException: The file is locked: C:/Users/user/my-portfolio/mytwitter-vscode/data/mytwitter-db.mv.db [2.3.232/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: C:/Users/user/my-portfolio/mytwitter-vscode/data/mytwitter-db.mv.db [2.3.232/7]" [50000-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:566)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	... 60 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: C:/Users/user/my-portfolio/mytwitter-vscode/data/mytwitter-db.mv.db [2.3.232/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:996)
	at org.h2.mvstore.SingleFileStore.lockFileChannel(SingleFileStore.java:143)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:117)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:81)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:286)
	... 54 more
2025-10-10 14:13:21.825857+09:00 jdbc[80]: null
org.h2.message.DbException: アプリケーションにより閉じられていない接続がガベージコレクトされました
The connection was not closed by the application and is garbage collected [90018-232]
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:217)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:134)
	at org.h2.util.JdbcUtils.getConnection(JdbcUtils.java:291)
	at org.h2.server.web.WebServer.getConnection(WebServer.java:811)
	at org.h2.server.web.WebApp.login(WebApp.java:1038)
	at org.h2.server.web.WebApp.process(WebApp.java:226)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:176)
	at org.h2.server.web.JakartaWebServlet.doGet(JakartaWebServlet.java:129)
	at org.h2.server.web.JakartaWebServlet.doPost(JakartaWebServlet.java:166)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:490)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:351)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:83)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:129)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:241)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:228)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:138)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:241)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:228)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:138)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:241)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:228)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:138)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:241)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:228)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:138)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:241)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:228)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:138)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:235)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:229)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:241)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:228)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:138)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:241)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:228)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:138)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:241)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:228)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:138)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:241)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:228)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:138)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:241)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:228)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:138)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:241)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:334)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:138)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1776)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: アプリケーションにより閉じられていない接続がガベージコレクトされました
The connection was not closed by the application and is garbage collected [90018-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:690)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	... 127 more
2025-10-10 14:13:21.832751+09:00 jdbc[80]: null
org.h2.message.DbException: アプリケーションにより閉じられていない接続がガベージコレクトされました
The connection was not closed by the application and is garbage collected [90018-232]
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:217)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:134)
	at org.h2.util.JdbcUtils.getConnection(JdbcUtils.java:291)
	at org.h2.server.web.WebServer.getConnection(WebServer.java:811)
	at org.h2.server.web.WebApp.login(WebApp.java:1038)
	at org.h2.server.web.WebApp.process(WebApp.java:226)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:176)
	at org.h2.server.web.JakartaWebServlet.doGet(JakartaWebServlet.java:129)
	at org.h2.server.web.JakartaWebServlet.doPost(JakartaWebServlet.java:166)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:490)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:351)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:83)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:129)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:241)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:228)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:138)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:241)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:228)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:138)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:241)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:228)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:138)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:241)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:228)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:138)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:241)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:228)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:138)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:235)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:229)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:241)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:228)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:138)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:241)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:228)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:138)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:241)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:228)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:138)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:241)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:228)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:138)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:241)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:228)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:138)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:241)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:334)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:225)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:138)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1776)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: アプリケーションにより閉じられていない接続がガベージコレクトされました
The connection was not closed by the application and is garbage collected [90018-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:690)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	... 127 more
2025-10-10 14:20:38.902948+09:00 database: flush
org.h2.message.DbException: 一般エラー: "org.h2.mvstore.MVStoreException: The file is locked: C:/Users/user/my-portfolio/mytwitter-vscode/data/mytwitter-db.mv.db [2.3.232/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: C:/Users/user/my-portfolio/mytwitter-vscode/data/mytwitter-db.mv.db [2.3.232/7]" [50000-232]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:407)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:122)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:1546)
	at org.h2.mvstore.MVStore.panic(MVStore.java:371)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:291)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2035)
	at org.h2.mvstore.db.Store.<init>(Store.java:133)
	at org.h2.engine.Database.<init>(Database.java:326)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:344)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:124)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:144)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:370)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:207)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:488)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:97)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:485)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:334)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1442)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1513)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.example.mytwitter_vscode.MytwitterVscodeApplication.main(MytwitterVscodeApplication.java:10)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: 一般エラー: "org.h2.mvstore.MVStoreException: The file is locked: C:/Users/user/my-portfolio/mytwitter-vscode/data/mytwitter-db.mv.db [2.3.232/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: C:/Users/user/my-portfolio/mytwitter-vscode/data/mytwitter-db.mv.db [2.3.232/7]" [50000-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:566)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	... 60 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: C:/Users/user/my-portfolio/mytwitter-vscode/data/mytwitter-db.mv.db [2.3.232/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:996)
	at org.h2.mvstore.SingleFileStore.lockFileChannel(SingleFileStore.java:143)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:117)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:81)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:286)
	... 54 more
2025-10-11 08:47:11.165318+09:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "SELECT * FROM [*]<テーブル名>"; 期待されるステートメント "identifier"
Syntax error in SQL statement "SELECT * FROM [*]<テーブル名>"; expected "identifier"; SQL statement:
SELECT * FROM <テーブル名> [42001-232]
2025-10-11 08:47:15.873211+09:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "SELECT * FROM [*]<テーブル名>"; 期待されるステートメント "identifier"
Syntax error in SQL statement "SELECT * FROM [*]<テーブル名>"; expected "identifier"; SQL statement:
SELECT * FROM <テーブル名> [42001-232]
2025-10-11 08:47:16.978653+09:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "SELECT * FROM [*]<テーブル名>"; 期待されるステートメント "identifier"
Syntax error in SQL statement "SELECT * FROM [*]<テーブル名>"; expected "identifier"; SQL statement:
SELECT * FROM <テーブル名> [42001-232]
